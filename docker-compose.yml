version: '3.8'

# Services we are going to use when running
services:
  postgres:
    image: kartoza/postgis:12.0
    container_name: postgres
    environment:
      POSTGRES_DB: liber
      POSTGRES_USER: chucvv
      POSTGRES_PASSWORD: postgres
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: "exit 0"

  # Redis cache
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.1
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    depends_on:
      - zookeeper
    links:
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:19092"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zookeeper
      - broker

  backend:
    image: chucvv/libertime:latest
    restart: always
    container_name: liber-apis
    mem_limit: 300m
    depends_on:
      - postgres
      - redis
      - zookeeper
      - broker
      - schema-registry
    environment:
      ENVIRONMENT: production
      PORT: 8080
      HASH_SECRET_KEY: ${HASH_SECRET_KEY}
      REDIS_SECRET_KEY: ${REDIS_SECRET_KEY}
      DB_SERVERNAME: postgres
      DB_NAME: liber
      DB_USERNAME: chucvv
      DB_PASSWORD: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_HOST: broker
      KAFKA_PORT: 19092
      SCHEME_HOST: http://schema-registry
      SCHEME_PORT: 8081
    ports:
      - "80:8080"